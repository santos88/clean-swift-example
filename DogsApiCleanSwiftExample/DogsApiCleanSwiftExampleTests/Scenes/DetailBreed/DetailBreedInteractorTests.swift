//
//  DetailBreedInteractorTests.swift
//  DogsApiCleanSwiftExample
//
//  Created by Santos Ramon on 10/10/18.
//  Copyright (c) 2018 Santos Ramon. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import DogsApiCleanSwiftExample
import XCTest

class DetailBreedInteractorTests: XCTestCase {
    // MARK: Subject under test

    var sut: DetailBreedInteractor!

    // MARK: Test lifecycle

    override func setUp() {
        super.setUp()
        setupDetailBreedInteractor()
    }

    override func tearDown() {
        super.tearDown()
    }

    // MARK: Test setup

    func setupDetailBreedInteractor() {
        sut = DetailBreedInteractor()
    }

    // MARK: Test doubles

    class workerSpy: DetailBreedWorkerProtocol {
        func listAllPictures(breedName: String, completion: @escaping (BreedsApiResponseModel?, Error?) -> Void) {
            let model = BreedsApiResponseModel(status: "ok", message: ["pic1", "pic2"])
            completion(model, nil)
        }
    }

    class DetailBreedPresentationLogicSpy: DetailBreedPresentationLogic {
        var presentPicturesCalled = false

        func presentPictures(response: DetailBreed.InitialLoad.Response) {
            presentPicturesCalled = true
        }
    }

    // MARK: Tests

    func testPresentPictures() {
        // Given
        let spy = DetailBreedPresentationLogicSpy()
        sut.presenter = spy
        sut.worker = workerSpy()
        sut.selectedBreed = "pekines"
        let request = DetailBreed.InitialLoad.Request()

        // When
        sut.initialLoad(request: request)

        // Then
        XCTAssertTrue(spy.presentPicturesCalled, "initialLoad(request:) should ask the presenter to present the pictures")
    }
}
